
@{
    ViewBag.Title = "Change Secret Key Page";
    Layout = "~/Views/Shared/layout-player.cshtml";
    WebLineage2.Models.Account account = (WebLineage2.Models.Account)HttpContext.Current.Session["user"];
}

<main class="main-content border-radius-lg ">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" data-scroll="true">
        <div class="container-fluid py-1 px-3">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
                    <li class="breadcrumb-item text-sm"><a class="opacity-5 text-dark" href="~/HomeUser/Index">HomeUser</a></li>
                    <li class="breadcrumb-item text-sm text-dark active" aria-current="page">changesecretkey</li>
                </ol>
                <h6 class="font-weight-bolder mb-0">changesecretkey</h6>
            </nav>
            <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
                <div class="ms-md-auto pe-md-3 d-flex align-items-center">
                </div>
                <ul class="navbar-nav  justify-content-end">
                    <li class="dropdown">
                        @{
                            <span class="d-sm-inline d-none">@account.Login</span>
                        }
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- End Navbar -->
    <div style="display:flex ;justify-content:center">
        <div class="sign-up" style="width: 40%; height: fit-content; background: #004E64; padding: 20px; border-radius: 5px; margin-top: 100px; margin-bottom: 20px; overflow: auto; border: 4px solid #000000">
            <h2 class="signup__heading" style="color: #f0f0f0; font-size: 36px; text-align: center; padding: 50px 0 10px 0;">Change Secret Key</h2>
            <p class="signup__already" ; style="font-size: 16px; color: #f0f0f0; text-align: center; padding: 16px 0 24px 0; position: relative; border-bottom: 1px solid rgba(57, 66, 93, 0.8);" />
            <form role="form" method="post" action="" autocomplete="off" class="signup__form" style="display: block; padding-top: 30px; text-align: center;">
                <input type="hidden" value="1" name="doLogin">
                <input type="submit" style="display:none">
                <div class="form__group" style="margin-bottom: 10px">
                    <input type="password" class="form__input" id="password" name="password" maxlength="16" placeholder="Password" onkeypress="return onlyNumberLetterKey(event)">
                </div>
                <div class="form__group" style="margin-bottom: 10px">
                    <input type="password" class="form__input" id="oldsecretkey" name="oldsecretkey" maxlength="4" placeholder="Old Secret Key" onkeypress="return onlyNumberKey(event)">
                </div>
                <div class="form__group" style="margin-bottom: 10px">
                    <input type="password" class="form__input" id="newsecretkey" name="newsecretkey" maxlength="4" placeholder="New Secret Key (4 numbers)" onkeypress="return onlyNumberKey(event)">
                </div>
                <div class="form__group" style="margin-bottom: 10px">
                    <input type="password" class="form__input" id="confirmsecretkey" name="confirmsecretkey" maxlength="4" placeholder="Confirm Secret Key" onkeypress="return onlyNumberKey(event)">
                </div>
                <script>
                    function onlyNumberKey(evt) {
                        // Only ASCII character in that range allowed
                        // Only numbers
                        let ASCIICode = (evt.which) ? evt.which : evt.keyCode
                        if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))
                            return false;
                        return true;
                    }
                    function onlyNumberLetterKey(evt) {
                        // Only ASCII character in that range allowed
                        // Only numbers & letters
                        let ASCIICode = (evt.which) ? evt.which : evt.keyCode
                        if (!(ASCIICode > 47 && ASCIICode < 58) && !(ASCIICode > 64 && ASCIICode < 91) && !(ASCIICode > 96 && ASCIICode < 123))
                            return false;
                        return true;
                    }
                </script>
                <div class="form-group" style="margin-bottom: 10px;">
                    <p class="text-danger">
                        @TempData["error"]
                    </p>
                </div>
                <div class="form__group" style="margin-bottom: 10px">
                    <button type="submit"
                            class="form__submit">
                        <span class="form__submit--text">Submit</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</main>




